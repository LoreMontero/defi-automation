import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

/**
 * @example
 * const externalContracts = {
 *   1: {
 *     DAI: {
 *       address: "0x...",
 *       abi: [...],
 *     },
 *   },
 * } as const;
 */
const externalContracts = {
  31337: {
    AAVE: {
      address: "0x6EF6B6176091F94A8aD52C08e571F81598b226A2",
      abi: [
        {
          inputs: [{ internalType: "contract IPoolAddressesProvider", name: "provider", type: "address" }],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "backer", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "fee", type: "uint256" },
          ],
          name: "BackUnbacked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "onBehalfOf", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            {
              indexed: false,
              internalType: "enum DataTypes.InterestRateMode",
              name: "interestRateMode",
              type: "uint8",
            },
            { indexed: false, internalType: "uint256", name: "borrowRate", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "Borrow",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "caller", type: "address" },
            { indexed: false, internalType: "uint256", name: "amountCovered", type: "uint256" },
          ],
          name: "DeficitCovered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "debtAsset", type: "address" },
            { indexed: false, internalType: "uint256", name: "amountCreated", type: "uint256" },
          ],
          name: "DeficitCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "target", type: "address" },
            { indexed: false, internalType: "address", name: "initiator", type: "address" },
            { indexed: true, internalType: "address", name: "asset", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            {
              indexed: false,
              internalType: "enum DataTypes.InterestRateMode",
              name: "interestRateMode",
              type: "uint8",
            },
            { indexed: false, internalType: "uint256", name: "premium", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "FlashLoan",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "asset", type: "address" },
            { indexed: false, internalType: "uint256", name: "totalDebt", type: "uint256" },
          ],
          name: "IsolationModeTotalDebtUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "collateralAsset", type: "address" },
            { indexed: true, internalType: "address", name: "debtAsset", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint256", name: "debtToCover", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidatedCollateralAmount", type: "uint256" },
            { indexed: false, internalType: "address", name: "liquidator", type: "address" },
            { indexed: false, internalType: "bool", name: "receiveAToken", type: "bool" },
          ],
          name: "LiquidationCall",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "onBehalfOf", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "MintUnbacked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "uint256", name: "amountMinted", type: "uint256" },
          ],
          name: "MintedToTreasury",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "repayer", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: false, internalType: "bool", name: "useATokens", type: "bool" },
          ],
          name: "Repay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "uint256", name: "liquidityRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "stableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidityIndex", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowIndex", type: "uint256" },
          ],
          name: "ReserveDataUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "uint256", name: "liquidityRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "stableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidityIndex", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowIndex", type: "uint256" },
          ],
          name: "ReserveDataUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
          ],
          name: "ReserveUsedAsCollateralDisabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
          ],
          name: "ReserveUsedAsCollateralEnabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "onBehalfOf", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "Supply",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint8", name: "categoryId", type: "uint8" },
          ],
          name: "UserEModeSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "Withdraw",
          type: "event",
        },
        {
          inputs: [],
          name: "ADDRESSES_PROVIDER",
          outputs: [{ internalType: "contract IPoolAddressesProvider", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "BRIDGE_PROTOCOL_FEE",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FLASHLOAN_PREMIUM_TOTAL",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FLASHLOAN_PREMIUM_TO_PROTOCOL",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_NUMBER_RESERVES",
          outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "POOL_REVISION",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "UMBRELLA",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "fee", type: "uint256" },
          ],
          name: "backUnbacked",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
          ],
          name: "borrow",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "borrow",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint8", name: "id", type: "uint8" },
            {
              components: [
                { internalType: "uint16", name: "ltv", type: "uint16" },
                { internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
                { internalType: "uint16", name: "liquidationBonus", type: "uint16" },
                { internalType: "string", name: "label", type: "string" },
              ],
              internalType: "struct DataTypes.EModeCategoryBaseConfiguration",
              name: "category",
              type: "tuple",
            },
          ],
          name: "configureEModeCategory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint8", name: "id", type: "uint8" },
            { internalType: "uint128", name: "borrowableBitmap", type: "uint128" },
          ],
          name: "configureEModeCategoryBorrowableBitmap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint8", name: "id", type: "uint8" },
            { internalType: "uint128", name: "collateralBitmap", type: "uint128" },
          ],
          name: "configureEModeCategoryCollateralBitmap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "dropReserve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "eliminateReserveDeficit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "balanceFromBefore", type: "uint256" },
            { internalType: "uint256", name: "balanceToBefore", type: "uint256" },
          ],
          name: "finalizeTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "receiverAddress", type: "address" },
            { internalType: "address[]", name: "assets", type: "address[]" },
            { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
            { internalType: "uint256[]", name: "interestRateModes", type: "uint256[]" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "bytes", name: "params", type: "bytes" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "flashLoan",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "receiverAddress", type: "address" },
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "bytes", name: "params", type: "bytes" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "flashLoanSimple",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getBorrowLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getBridgeLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getConfiguration",
          outputs: [
            {
              components: [{ internalType: "uint256", name: "data", type: "uint256" }],
              internalType: "struct DataTypes.ReserveConfigurationMap",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryBorrowableBitmap",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryCollateralBitmap",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryCollateralConfig",
          outputs: [
            {
              components: [
                { internalType: "uint16", name: "ltv", type: "uint16" },
                { internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
                { internalType: "uint16", name: "liquidationBonus", type: "uint16" },
              ],
              internalType: "struct DataTypes.CollateralConfig",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryData",
          outputs: [
            {
              components: [
                { internalType: "uint16", name: "ltv", type: "uint16" },
                { internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
                { internalType: "uint16", name: "liquidationBonus", type: "uint16" },
                { internalType: "address", name: "priceSource", type: "address" },
                { internalType: "string", name: "label", type: "string" },
              ],
              internalType: "struct DataTypes.EModeCategoryLegacy",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryLabel",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getEModeLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getFlashLoanLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getLiquidationGracePeriod",
          outputs: [{ internalType: "uint40", name: "", type: "uint40" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLiquidationLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getPoolLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveAToken",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "id", type: "uint16" }],
          name: "getReserveAddressById",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveData",
          outputs: [
            {
              components: [
                {
                  components: [{ internalType: "uint256", name: "data", type: "uint256" }],
                  internalType: "struct DataTypes.ReserveConfigurationMap",
                  name: "configuration",
                  type: "tuple",
                },
                { internalType: "uint128", name: "liquidityIndex", type: "uint128" },
                { internalType: "uint128", name: "currentLiquidityRate", type: "uint128" },
                { internalType: "uint128", name: "variableBorrowIndex", type: "uint128" },
                { internalType: "uint128", name: "currentVariableBorrowRate", type: "uint128" },
                { internalType: "uint128", name: "currentStableBorrowRate", type: "uint128" },
                { internalType: "uint40", name: "lastUpdateTimestamp", type: "uint40" },
                { internalType: "uint16", name: "id", type: "uint16" },
                { internalType: "address", name: "aTokenAddress", type: "address" },
                { internalType: "address", name: "stableDebtTokenAddress", type: "address" },
                { internalType: "address", name: "variableDebtTokenAddress", type: "address" },
                { internalType: "address", name: "interestRateStrategyAddress", type: "address" },
                { internalType: "uint128", name: "accruedToTreasury", type: "uint128" },
                { internalType: "uint128", name: "unbacked", type: "uint128" },
                { internalType: "uint128", name: "isolationModeTotalDebt", type: "uint128" },
              ],
              internalType: "struct DataTypes.ReserveDataLegacy",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveDeficit",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveNormalizedIncome",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveNormalizedVariableDebt",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveVariableDebtToken",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReservesCount",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReservesList",
          outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSupplyLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "getUserAccountData",
          outputs: [
            { internalType: "uint256", name: "totalCollateralBase", type: "uint256" },
            { internalType: "uint256", name: "totalDebtBase", type: "uint256" },
            { internalType: "uint256", name: "availableBorrowsBase", type: "uint256" },
            { internalType: "uint256", name: "currentLiquidationThreshold", type: "uint256" },
            { internalType: "uint256", name: "ltv", type: "uint256" },
            { internalType: "uint256", name: "healthFactor", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "getUserConfiguration",
          outputs: [
            {
              components: [{ internalType: "uint256", name: "data", type: "uint256" }],
              internalType: "struct DataTypes.UserConfigurationMap",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "getUserEMode",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getVirtualUnderlyingBalance",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "address", name: "aTokenAddress", type: "address" },
            { internalType: "address", name: "variableDebtAddress", type: "address" },
            { internalType: "address", name: "interestRateStrategyAddress", type: "address" },
          ],
          name: "initReserve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "contract IPoolAddressesProvider", name: "provider", type: "address" }],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "collateralAsset", type: "address" },
            { internalType: "address", name: "debtAsset", type: "address" },
            { internalType: "address", name: "user", type: "address" },
            { internalType: "uint256", name: "debtToCover", type: "uint256" },
            { internalType: "bool", name: "receiveAToken", type: "bool" },
          ],
          name: "liquidationCall",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "args1", type: "bytes32" },
            { internalType: "bytes32", name: "args2", type: "bytes32" },
          ],
          name: "liquidationCall",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address[]", name: "assets", type: "address[]" }],
          name: "mintToTreasury",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "mintUnbacked",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "repay",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
          ],
          name: "repay",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
          ],
          name: "repayWithATokens",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "repayWithATokens",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "args", type: "bytes32" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "repayWithPermit",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "permitV", type: "uint8" },
            { internalType: "bytes32", name: "permitR", type: "bytes32" },
            { internalType: "bytes32", name: "permitS", type: "bytes32" },
          ],
          name: "repayWithPermit",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "token", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "rescueTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "resetIsolationModeTotalDebt",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            {
              components: [{ internalType: "uint256", name: "data", type: "uint256" }],
              internalType: "struct DataTypes.ReserveConfigurationMap",
              name: "configuration",
              type: "tuple",
            },
          ],
          name: "setConfiguration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint40", name: "until", type: "uint40" },
          ],
          name: "setLiquidationGracePeriod",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "address", name: "rateStrategyAddress", type: "address" },
          ],
          name: "setReserveInterestRateStrategyAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "categoryId", type: "uint8" }],
          name: "setUserEMode",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "setUserUseReserveAsCollateral",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "bool", name: "useAsCollateral", type: "bool" },
          ],
          name: "setUserUseReserveAsCollateral",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "supply",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "supply",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "permitV", type: "uint8" },
            { internalType: "bytes32", name: "permitR", type: "bytes32" },
            { internalType: "bytes32", name: "permitS", type: "bytes32" },
          ],
          name: "supplyWithPermit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "args", type: "bytes32" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "supplyWithPermit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "syncIndexesState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "syncRatesState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "protocolFee", type: "uint256" }],
          name: "updateBridgeProtocolFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint128", name: "flashLoanPremiumTotal", type: "uint128" },
            { internalType: "uint128", name: "flashLoanPremiumToProtocol", type: "uint128" },
          ],
          name: "updateFlashloanPremiums",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "to", type: "address" },
          ],
          name: "withdraw",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "withdraw",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
    UNISWAP: {
      address: "0x498581fF718922c3f8e6A244956aF099B2652b2b",
      abi: [
        {
          inputs: [{ internalType: "address", name: "initialOwner", type: "address" }],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        { inputs: [], name: "AlreadyUnlocked", type: "error" },
        {
          inputs: [
            { internalType: "address", name: "currency0", type: "address" },
            { internalType: "address", name: "currency1", type: "address" },
          ],
          name: "CurrenciesOutOfOrderOrEqual",
          type: "error",
        },
        { inputs: [], name: "CurrencyNotSettled", type: "error" },
        { inputs: [], name: "DelegateCallNotAllowed", type: "error" },
        { inputs: [], name: "InvalidCaller", type: "error" },
        { inputs: [], name: "ManagerLocked", type: "error" },
        { inputs: [], name: "MustClearExactPositiveDelta", type: "error" },
        { inputs: [], name: "NonzeroNativeValue", type: "error" },
        { inputs: [], name: "PoolNotInitialized", type: "error" },
        { inputs: [], name: "ProtocolFeeCurrencySynced", type: "error" },
        {
          inputs: [{ internalType: "uint24", name: "fee", type: "uint24" }],
          name: "ProtocolFeeTooLarge",
          type: "error",
        },
        { inputs: [], name: "SwapAmountCannotBeZero", type: "error" },
        {
          inputs: [{ internalType: "int24", name: "tickSpacing", type: "int24" }],
          name: "TickSpacingTooLarge",
          type: "error",
        },
        {
          inputs: [{ internalType: "int24", name: "tickSpacing", type: "int24" }],
          name: "TickSpacingTooSmall",
          type: "error",
        },
        { inputs: [], name: "UnauthorizedDynamicLPFeeUpdate", type: "error" },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "owner", type: "address" },
            { indexed: true, internalType: "address", name: "spender", type: "address" },
            { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "Approval",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "PoolId", name: "id", type: "bytes32" },
            { indexed: true, internalType: "address", name: "sender", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount0", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount1", type: "uint256" },
          ],
          name: "Donate",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "PoolId", name: "id", type: "bytes32" },
            { indexed: true, internalType: "Currency", name: "currency0", type: "address" },
            { indexed: true, internalType: "Currency", name: "currency1", type: "address" },
            { indexed: false, internalType: "uint24", name: "fee", type: "uint24" },
            { indexed: false, internalType: "int24", name: "tickSpacing", type: "int24" },
            { indexed: false, internalType: "contract IHooks", name: "hooks", type: "address" },
            { indexed: false, internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
            { indexed: false, internalType: "int24", name: "tick", type: "int24" },
          ],
          name: "Initialize",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "PoolId", name: "id", type: "bytes32" },
            { indexed: true, internalType: "address", name: "sender", type: "address" },
            { indexed: false, internalType: "int24", name: "tickLower", type: "int24" },
            { indexed: false, internalType: "int24", name: "tickUpper", type: "int24" },
            { indexed: false, internalType: "int256", name: "liquidityDelta", type: "int256" },
            { indexed: false, internalType: "bytes32", name: "salt", type: "bytes32" },
          ],
          name: "ModifyLiquidity",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "owner", type: "address" },
            { indexed: true, internalType: "address", name: "operator", type: "address" },
            { indexed: false, internalType: "bool", name: "approved", type: "bool" },
          ],
          name: "OperatorSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "newOwner", type: "address" },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [{ indexed: true, internalType: "address", name: "protocolFeeController", type: "address" }],
          name: "ProtocolFeeControllerUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "PoolId", name: "id", type: "bytes32" },
            { indexed: false, internalType: "uint24", name: "protocolFee", type: "uint24" },
          ],
          name: "ProtocolFeeUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "PoolId", name: "id", type: "bytes32" },
            { indexed: true, internalType: "address", name: "sender", type: "address" },
            { indexed: false, internalType: "int128", name: "amount0", type: "int128" },
            { indexed: false, internalType: "int128", name: "amount1", type: "int128" },
            { indexed: false, internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
            { indexed: false, internalType: "uint128", name: "liquidity", type: "uint128" },
            { indexed: false, internalType: "int24", name: "tick", type: "int24" },
            { indexed: false, internalType: "uint24", name: "fee", type: "uint24" },
          ],
          name: "Swap",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: false, internalType: "address", name: "caller", type: "address" },
            { indexed: true, internalType: "address", name: "from", type: "address" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: true, internalType: "uint256", name: "id", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
          ],
          name: "allowance",
          outputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "approve",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
          ],
          name: "balanceOf",
          outputs: [{ internalType: "uint256", name: "balance", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "burn",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "Currency", name: "currency", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "clear",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "recipient", type: "address" },
            { internalType: "Currency", name: "currency", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "collectProtocolFees",
          outputs: [{ internalType: "uint256", name: "amountCollected", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "Currency", name: "currency0", type: "address" },
                { internalType: "Currency", name: "currency1", type: "address" },
                { internalType: "uint24", name: "fee", type: "uint24" },
                { internalType: "int24", name: "tickSpacing", type: "int24" },
                { internalType: "contract IHooks", name: "hooks", type: "address" },
              ],
              internalType: "struct PoolKey",
              name: "key",
              type: "tuple",
            },
            { internalType: "uint256", name: "amount0", type: "uint256" },
            { internalType: "uint256", name: "amount1", type: "uint256" },
            { internalType: "bytes", name: "hookData", type: "bytes" },
          ],
          name: "donate",
          outputs: [{ internalType: "BalanceDelta", name: "delta", type: "int256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "slot", type: "bytes32" }],
          name: "extsload",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "startSlot", type: "bytes32" },
            { internalType: "uint256", name: "nSlots", type: "uint256" },
          ],
          name: "extsload",
          outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32[]", name: "slots", type: "bytes32[]" }],
          name: "extsload",
          outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32[]", name: "slots", type: "bytes32[]" }],
          name: "exttload",
          outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "slot", type: "bytes32" }],
          name: "exttload",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "Currency", name: "currency0", type: "address" },
                { internalType: "Currency", name: "currency1", type: "address" },
                { internalType: "uint24", name: "fee", type: "uint24" },
                { internalType: "int24", name: "tickSpacing", type: "int24" },
                { internalType: "contract IHooks", name: "hooks", type: "address" },
              ],
              internalType: "struct PoolKey",
              name: "key",
              type: "tuple",
            },
            { internalType: "uint160", name: "sqrtPriceX96", type: "uint160" },
          ],
          name: "initialize",
          outputs: [{ internalType: "int24", name: "tick", type: "int24" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "operator", type: "address" },
          ],
          name: "isOperator",
          outputs: [{ internalType: "bool", name: "isOperator", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "mint",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "Currency", name: "currency0", type: "address" },
                { internalType: "Currency", name: "currency1", type: "address" },
                { internalType: "uint24", name: "fee", type: "uint24" },
                { internalType: "int24", name: "tickSpacing", type: "int24" },
                { internalType: "contract IHooks", name: "hooks", type: "address" },
              ],
              internalType: "struct PoolKey",
              name: "key",
              type: "tuple",
            },
            {
              components: [
                { internalType: "int24", name: "tickLower", type: "int24" },
                { internalType: "int24", name: "tickUpper", type: "int24" },
                { internalType: "int256", name: "liquidityDelta", type: "int256" },
                { internalType: "bytes32", name: "salt", type: "bytes32" },
              ],
              internalType: "struct IPoolManager.ModifyLiquidityParams",
              name: "params",
              type: "tuple",
            },
            { internalType: "bytes", name: "hookData", type: "bytes" },
          ],
          name: "modifyLiquidity",
          outputs: [
            { internalType: "BalanceDelta", name: "callerDelta", type: "int256" },
            { internalType: "BalanceDelta", name: "feesAccrued", type: "int256" },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "protocolFeeController",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "Currency", name: "currency", type: "address" }],
          name: "protocolFeesAccrued",
          outputs: [{ internalType: "uint256", name: "amount", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "operator", type: "address" },
            { internalType: "bool", name: "approved", type: "bool" },
          ],
          name: "setOperator",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "Currency", name: "currency0", type: "address" },
                { internalType: "Currency", name: "currency1", type: "address" },
                { internalType: "uint24", name: "fee", type: "uint24" },
                { internalType: "int24", name: "tickSpacing", type: "int24" },
                { internalType: "contract IHooks", name: "hooks", type: "address" },
              ],
              internalType: "struct PoolKey",
              name: "key",
              type: "tuple",
            },
            { internalType: "uint24", name: "newProtocolFee", type: "uint24" },
          ],
          name: "setProtocolFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "controller", type: "address" }],
          name: "setProtocolFeeController",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "settle",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "recipient", type: "address" }],
          name: "settleFor",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
          name: "supportsInterface",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "Currency", name: "currency0", type: "address" },
                { internalType: "Currency", name: "currency1", type: "address" },
                { internalType: "uint24", name: "fee", type: "uint24" },
                { internalType: "int24", name: "tickSpacing", type: "int24" },
                { internalType: "contract IHooks", name: "hooks", type: "address" },
              ],
              internalType: "struct PoolKey",
              name: "key",
              type: "tuple",
            },
            {
              components: [
                { internalType: "bool", name: "zeroForOne", type: "bool" },
                { internalType: "int256", name: "amountSpecified", type: "int256" },
                { internalType: "uint160", name: "sqrtPriceLimitX96", type: "uint160" },
              ],
              internalType: "struct IPoolManager.SwapParams",
              name: "params",
              type: "tuple",
            },
            { internalType: "bytes", name: "hookData", type: "bytes" },
          ],
          name: "swap",
          outputs: [{ internalType: "BalanceDelta", name: "swapDelta", type: "int256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "Currency", name: "currency", type: "address" }],
          name: "sync",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "Currency", name: "currency", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "take",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "receiver", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "transfer",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "sender", type: "address" },
            { internalType: "address", name: "receiver", type: "address" },
            { internalType: "uint256", name: "id", type: "uint256" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "transferFrom",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes", name: "data", type: "bytes" }],
          name: "unlock",
          outputs: [{ internalType: "bytes", name: "result", type: "bytes" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                { internalType: "Currency", name: "currency0", type: "address" },
                { internalType: "Currency", name: "currency1", type: "address" },
                { internalType: "uint24", name: "fee", type: "uint24" },
                { internalType: "int24", name: "tickSpacing", type: "int24" },
                { internalType: "contract IHooks", name: "hooks", type: "address" },
              ],
              internalType: "struct PoolKey",
              name: "key",
              type: "tuple",
            },
            { internalType: "uint24", name: "newDynamicLPFee", type: "uint24" },
          ],
          name: "updateDynamicLPFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
  },
  8534: {
    AAVE: {
      address: "0x6EF6B6176091F94A8aD52C08e571F81598b226A2",
      abi: [
        {
          inputs: [{ internalType: "contract IPoolAddressesProvider", name: "provider", type: "address" }],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "backer", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "fee", type: "uint256" },
          ],
          name: "BackUnbacked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "onBehalfOf", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            {
              indexed: false,
              internalType: "enum DataTypes.InterestRateMode",
              name: "interestRateMode",
              type: "uint8",
            },
            { indexed: false, internalType: "uint256", name: "borrowRate", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "Borrow",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "caller", type: "address" },
            { indexed: false, internalType: "uint256", name: "amountCovered", type: "uint256" },
          ],
          name: "DeficitCovered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "debtAsset", type: "address" },
            { indexed: false, internalType: "uint256", name: "amountCreated", type: "uint256" },
          ],
          name: "DeficitCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "target", type: "address" },
            { indexed: false, internalType: "address", name: "initiator", type: "address" },
            { indexed: true, internalType: "address", name: "asset", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            {
              indexed: false,
              internalType: "enum DataTypes.InterestRateMode",
              name: "interestRateMode",
              type: "uint8",
            },
            { indexed: false, internalType: "uint256", name: "premium", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "FlashLoan",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "asset", type: "address" },
            { indexed: false, internalType: "uint256", name: "totalDebt", type: "uint256" },
          ],
          name: "IsolationModeTotalDebtUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "collateralAsset", type: "address" },
            { indexed: true, internalType: "address", name: "debtAsset", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint256", name: "debtToCover", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidatedCollateralAmount", type: "uint256" },
            { indexed: false, internalType: "address", name: "liquidator", type: "address" },
            { indexed: false, internalType: "bool", name: "receiveAToken", type: "bool" },
          ],
          name: "LiquidationCall",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "onBehalfOf", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "MintUnbacked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "uint256", name: "amountMinted", type: "uint256" },
          ],
          name: "MintedToTreasury",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "repayer", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: false, internalType: "bool", name: "useATokens", type: "bool" },
          ],
          name: "Repay",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "uint256", name: "liquidityRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "stableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidityIndex", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowIndex", type: "uint256" },
          ],
          name: "ReserveDataUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "uint256", name: "liquidityRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "stableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowRate", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "liquidityIndex", type: "uint256" },
            { indexed: false, internalType: "uint256", name: "variableBorrowIndex", type: "uint256" },
          ],
          name: "ReserveDataUpdated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
          ],
          name: "ReserveUsedAsCollateralDisabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
          ],
          name: "ReserveUsedAsCollateralEnabled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: false, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "onBehalfOf", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
            { indexed: true, internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "Supply",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: false, internalType: "uint8", name: "categoryId", type: "uint8" },
          ],
          name: "UserEModeSet",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            { indexed: true, internalType: "address", name: "reserve", type: "address" },
            { indexed: true, internalType: "address", name: "user", type: "address" },
            { indexed: true, internalType: "address", name: "to", type: "address" },
            { indexed: false, internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "Withdraw",
          type: "event",
        },
        {
          inputs: [],
          name: "ADDRESSES_PROVIDER",
          outputs: [{ internalType: "contract IPoolAddressesProvider", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "BRIDGE_PROTOCOL_FEE",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FLASHLOAN_PREMIUM_TOTAL",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "FLASHLOAN_PREMIUM_TO_PROTOCOL",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "MAX_NUMBER_RESERVES",
          outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "POOL_REVISION",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "UMBRELLA",
          outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "fee", type: "uint256" },
          ],
          name: "backUnbacked",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
          ],
          name: "borrow",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "borrow",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint8", name: "id", type: "uint8" },
            {
              components: [
                { internalType: "uint16", name: "ltv", type: "uint16" },
                { internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
                { internalType: "uint16", name: "liquidationBonus", type: "uint16" },
                { internalType: "string", name: "label", type: "string" },
              ],
              internalType: "struct DataTypes.EModeCategoryBaseConfiguration",
              name: "category",
              type: "tuple",
            },
          ],
          name: "configureEModeCategory",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint8", name: "id", type: "uint8" },
            { internalType: "uint128", name: "borrowableBitmap", type: "uint128" },
          ],
          name: "configureEModeCategoryBorrowableBitmap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint8", name: "id", type: "uint8" },
            { internalType: "uint128", name: "collateralBitmap", type: "uint128" },
          ],
          name: "configureEModeCategoryCollateralBitmap",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "deposit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "dropReserve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "eliminateReserveDeficit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "balanceFromBefore", type: "uint256" },
            { internalType: "uint256", name: "balanceToBefore", type: "uint256" },
          ],
          name: "finalizeTransfer",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "receiverAddress", type: "address" },
            { internalType: "address[]", name: "assets", type: "address[]" },
            { internalType: "uint256[]", name: "amounts", type: "uint256[]" },
            { internalType: "uint256[]", name: "interestRateModes", type: "uint256[]" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "bytes", name: "params", type: "bytes" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "flashLoan",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "receiverAddress", type: "address" },
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "bytes", name: "params", type: "bytes" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "flashLoanSimple",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "getBorrowLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getBridgeLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getConfiguration",
          outputs: [
            {
              components: [{ internalType: "uint256", name: "data", type: "uint256" }],
              internalType: "struct DataTypes.ReserveConfigurationMap",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryBorrowableBitmap",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryCollateralBitmap",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryCollateralConfig",
          outputs: [
            {
              components: [
                { internalType: "uint16", name: "ltv", type: "uint16" },
                { internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
                { internalType: "uint16", name: "liquidationBonus", type: "uint16" },
              ],
              internalType: "struct DataTypes.CollateralConfig",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryData",
          outputs: [
            {
              components: [
                { internalType: "uint16", name: "ltv", type: "uint16" },
                { internalType: "uint16", name: "liquidationThreshold", type: "uint16" },
                { internalType: "uint16", name: "liquidationBonus", type: "uint16" },
                { internalType: "address", name: "priceSource", type: "address" },
                { internalType: "string", name: "label", type: "string" },
              ],
              internalType: "struct DataTypes.EModeCategoryLegacy",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "id", type: "uint8" }],
          name: "getEModeCategoryLabel",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getEModeLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getFlashLoanLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getLiquidationGracePeriod",
          outputs: [{ internalType: "uint40", name: "", type: "uint40" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getLiquidationLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "getPoolLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveAToken",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint16", name: "id", type: "uint16" }],
          name: "getReserveAddressById",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveData",
          outputs: [
            {
              components: [
                {
                  components: [{ internalType: "uint256", name: "data", type: "uint256" }],
                  internalType: "struct DataTypes.ReserveConfigurationMap",
                  name: "configuration",
                  type: "tuple",
                },
                { internalType: "uint128", name: "liquidityIndex", type: "uint128" },
                { internalType: "uint128", name: "currentLiquidityRate", type: "uint128" },
                { internalType: "uint128", name: "variableBorrowIndex", type: "uint128" },
                { internalType: "uint128", name: "currentVariableBorrowRate", type: "uint128" },
                { internalType: "uint128", name: "currentStableBorrowRate", type: "uint128" },
                { internalType: "uint40", name: "lastUpdateTimestamp", type: "uint40" },
                { internalType: "uint16", name: "id", type: "uint16" },
                { internalType: "address", name: "aTokenAddress", type: "address" },
                { internalType: "address", name: "stableDebtTokenAddress", type: "address" },
                { internalType: "address", name: "variableDebtTokenAddress", type: "address" },
                { internalType: "address", name: "interestRateStrategyAddress", type: "address" },
                { internalType: "uint128", name: "accruedToTreasury", type: "uint128" },
                { internalType: "uint128", name: "unbacked", type: "uint128" },
                { internalType: "uint128", name: "isolationModeTotalDebt", type: "uint128" },
              ],
              internalType: "struct DataTypes.ReserveDataLegacy",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveDeficit",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveNormalizedIncome",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveNormalizedVariableDebt",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getReserveVariableDebtToken",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReservesCount",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getReservesList",
          outputs: [{ internalType: "address[]", name: "", type: "address[]" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getSupplyLogic",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "getUserAccountData",
          outputs: [
            { internalType: "uint256", name: "totalCollateralBase", type: "uint256" },
            { internalType: "uint256", name: "totalDebtBase", type: "uint256" },
            { internalType: "uint256", name: "availableBorrowsBase", type: "uint256" },
            { internalType: "uint256", name: "currentLiquidationThreshold", type: "uint256" },
            { internalType: "uint256", name: "ltv", type: "uint256" },
            { internalType: "uint256", name: "healthFactor", type: "uint256" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "getUserConfiguration",
          outputs: [
            {
              components: [{ internalType: "uint256", name: "data", type: "uint256" }],
              internalType: "struct DataTypes.UserConfigurationMap",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "user", type: "address" }],
          name: "getUserEMode",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "getVirtualUnderlyingBalance",
          outputs: [{ internalType: "uint128", name: "", type: "uint128" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "address", name: "aTokenAddress", type: "address" },
            { internalType: "address", name: "variableDebtAddress", type: "address" },
            { internalType: "address", name: "interestRateStrategyAddress", type: "address" },
          ],
          name: "initReserve",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "contract IPoolAddressesProvider", name: "provider", type: "address" }],
          name: "initialize",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "collateralAsset", type: "address" },
            { internalType: "address", name: "debtAsset", type: "address" },
            { internalType: "address", name: "user", type: "address" },
            { internalType: "uint256", name: "debtToCover", type: "uint256" },
            { internalType: "bool", name: "receiveAToken", type: "bool" },
          ],
          name: "liquidationCall",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "args1", type: "bytes32" },
            { internalType: "bytes32", name: "args2", type: "bytes32" },
          ],
          name: "liquidationCall",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address[]", name: "assets", type: "address[]" }],
          name: "mintToTreasury",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "mintUnbacked",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "repay",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
          ],
          name: "repay",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
          ],
          name: "repayWithATokens",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "repayWithATokens",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "args", type: "bytes32" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "repayWithPermit",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "uint256", name: "interestRateMode", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "permitV", type: "uint8" },
            { internalType: "bytes32", name: "permitR", type: "bytes32" },
            { internalType: "bytes32", name: "permitS", type: "bytes32" },
          ],
          name: "repayWithPermit",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "token", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
          ],
          name: "rescueTokens",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "resetIsolationModeTotalDebt",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            {
              components: [{ internalType: "uint256", name: "data", type: "uint256" }],
              internalType: "struct DataTypes.ReserveConfigurationMap",
              name: "configuration",
              type: "tuple",
            },
          ],
          name: "setConfiguration",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint40", name: "until", type: "uint40" },
          ],
          name: "setLiquidationGracePeriod",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "address", name: "rateStrategyAddress", type: "address" },
          ],
          name: "setReserveInterestRateStrategyAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint8", name: "categoryId", type: "uint8" }],
          name: "setUserEMode",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "setUserUseReserveAsCollateral",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "bool", name: "useAsCollateral", type: "bool" },
          ],
          name: "setUserUseReserveAsCollateral",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
          ],
          name: "supply",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "supply",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "onBehalfOf", type: "address" },
            { internalType: "uint16", name: "referralCode", type: "uint16" },
            { internalType: "uint256", name: "deadline", type: "uint256" },
            { internalType: "uint8", name: "permitV", type: "uint8" },
            { internalType: "bytes32", name: "permitR", type: "bytes32" },
            { internalType: "bytes32", name: "permitS", type: "bytes32" },
          ],
          name: "supplyWithPermit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "args", type: "bytes32" },
            { internalType: "bytes32", name: "r", type: "bytes32" },
            { internalType: "bytes32", name: "s", type: "bytes32" },
          ],
          name: "supplyWithPermit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "syncIndexesState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "address", name: "asset", type: "address" }],
          name: "syncRatesState",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "uint256", name: "protocolFee", type: "uint256" }],
          name: "updateBridgeProtocolFee",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "uint128", name: "flashLoanPremiumTotal", type: "uint128" },
            { internalType: "uint128", name: "flashLoanPremiumToProtocol", type: "uint128" },
          ],
          name: "updateFlashloanPremiums",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "asset", type: "address" },
            { internalType: "uint256", name: "amount", type: "uint256" },
            { internalType: "address", name: "to", type: "address" },
          ],
          name: "withdraw",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "args", type: "bytes32" }],
          name: "withdraw",
          outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
    },
  },
} as const;

export default externalContracts satisfies GenericContractsDeclaration;
